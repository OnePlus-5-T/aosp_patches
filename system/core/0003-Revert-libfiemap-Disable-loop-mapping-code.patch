From d8488e80d7d8bffc37e9f1801939c9489b8898fb Mon Sep 17 00:00:00 2001
From: Roberto Sartori <roberto.sartori.android@gmail.com>
Date: Wed, 19 Jun 2024 20:35:36 +0200
Subject: [PATCH] Revert "libfiemap: Disable loop mapping code."

This reverts commit d7f09657617cd26734729bf8bc24b9a7829a544d.
---
 fs_mgr/libfiemap/image_manager.cpp | 26 +++++++++++++-------------
 1 file changed, 13 insertions(+), 13 deletions(-)

diff --git a/fs_mgr/libfiemap/image_manager.cpp b/fs_mgr/libfiemap/image_manager.cpp
index a5da6e3429..c416f4df44 100644
--- a/fs_mgr/libfiemap/image_manager.cpp
+++ b/fs_mgr/libfiemap/image_manager.cpp
@@ -531,16 +531,11 @@ bool ImageManager::MapImageDevice(const std::string& name,
     // If there is no intermediate device-mapper node, then partitions cannot be
     // opened writable due to sepolicy and exclusivity of having a mounted
     // filesystem. This should only happen on devices with no encryption, or
-    // devices with FBE and no metadata encryption. For these cases we COULD
-    // perform normal writes to /data/gsi (which is unencrypted), but given that
-    // metadata encryption has been mandated since Android R, we don't actually
-    // support or test this.
+    // devices with FBE and no metadata encryption. For these cases it suffices
+    // to perform normal file writes to /data/gsi (which is unencrypted).
     //
-    // So, we validate here that /data is backed by device-mapper. This code
-    // isn't needed in recovery since there is no /data.
-    //
-    // If this logic sticks for a release, we can remove MapWithLoopDevice, as
-    // well as WrapUserdataIfNeeded in fs_mgr.
+    // Note: this is not gated on DeviceInfo, because the recovery-specific path
+    // must only be used in actual recovery.
     std::string block_device;
     bool can_use_devicemapper;
     if (!FiemapWriter::GetBlockDeviceForFile(image_header, &block_device, &can_use_devicemapper)) {
@@ -548,15 +543,20 @@ bool ImageManager::MapImageDevice(const std::string& name,
         return false;
     }
 
-    if (!can_use_devicemapper) {
-        LOG(ERROR) << "Cannot map image: /data must be mounted on top of device-mapper.";
+    if (can_use_devicemapper) {
+        if (!MapWithDmLinear(*partition_opener_.get(), name, timeout_ms, path)) {
+            return false;
+        }
+    } else if (!MapWithLoopDevice(name, timeout_ms, path)) {
         return false;
     }
-#endif
-
+#else
+    // In recovery, we can *only* use device-mapper, since partitions aren't
+    // mounted. That also means we cannot call GetBlockDeviceForFile.
     if (!MapWithDmLinear(*partition_opener_.get(), name, timeout_ms, path)) {
         return false;
     }
+#endif
 
     // Set a property so we remember this is mapped.
     auto prop_name = GetStatusPropertyName(name);
-- 
2.34.1

